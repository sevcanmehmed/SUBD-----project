--1
SET SCHEMA FN71981@

SELECT * FROM FLIGHTS@

SELECT * FROM WARNING_MSG@

SELECT TIME(ARRIVALTIME) - TIME(DEPTTIME)
FROM FLIGHTS@

--     CALL DBMS_OUTPUT.PUT_LINE('NEW MOST COMMON AIRLINE IS ' || N.AIRLINESNAME);


CREATE TRIGGER CHECK_TIME
BEFORE INSERT ON FN71981.FLIGHTS
       REFERENCING NEW AS N
       FOR EACH ROW
    WHEN (MINUTES(N.ARRIVALTIME) - MINUTES(N.DEPTTIME) <> N.DURATION)
    SET N.DURATION = MINUTES(N.ARRIVALTIME) - MINUTES(N.DEPTTIME)@
    
    
    
CREATE OR REPLACE PROCEDURE MOST_COMMON_AIRLINE(OUT v_airlines_name VARCHAR(50))
BEGIN
       DECLARE more_than_one_row CONDITION FOR SQLSTATE '21000';
       DECLARE CONTINUE HANDLER FOR more_than_one_row
       INSERT INTO WARNING_MSG(MSG) VALUES ('More than one row exist');
       CALL DBMS_OUTPUT.PUT_LINE('More than one row exist');

    SELECT  AIRLINESNAME INTO v_airlines_name
    FROM    FLIGHTS
    GROUP BY AIRLINESNAME
    ORDER BY COUNT(*) DESC
    FETCH FIRST 1 ROW ONLY;
END@

CREATE OR REPLACE PROCEDURE HOW_MANY_AIRPORTS_HAVE_COUNTRIES(IN v_country_name VARCHAR(50), OUT v_cnt_airports INT)
BEGIN
     DECLARE cnt INT DEFAULT 0;
     DECLARE table_row ANCHOR ROW FN71981.DESTINATIONS;
     DECLARE end_table INT DEFAULT 0;
     
     DECLARE not_found CONDITION FOR SQLSTATE '02000';

      DECLARE C1 CURSOR FOR 
      SELECT * FROM DESTINATIONS
      WHERE COUNTRY = v_country_name;

     DECLARE CONTINUE HANDLER FOR not_found
     SET end_table = 1;
     
    OPEN C1;
    FETCH C1 INTO table_row;
    
    WHILE end_table = 0 DO
    SET cnt = cnt + 1;
    FETCH C1 INTO table_row; 
    END WHILE;
    
    SET v_cnt_airports = cnt;
END@


CALL FN71981.MOST_COMMON_AIRLINE(?)@

SELECT * FROM FLIGHTS
WHERE CODE ='FB791'@

CALL FN71981.CHECK_FLIGHT_CODE('FB793', ?)@


CALL FN71981.TASK1('C01', ?)@

CALL FN71981.FLIGHT_INFORMATION('SOFIA-AIRPORT',?)@

--2
CREATE MODULE HW_2@

--3
CREATE TYPE NEWTYPE AS VARCHAR(100) ARRAY[VARCHAR(100)]@

ALTER MODULE HW_2 ADD TYPE NEWTYPE AS VARCHAR(100) ARRAY[VARCHAR(100)]@

--4
ALTER MODULE HW_2
PUBLISH PROCEDURE PROCHW_2()@

ALTER MODULE HW_2
ADD VARIABLE CUR1 CURSOR CONSTANT (CURSOR FOR SELECT* FROM EMP)@

ALTER MODULE HW_2
ADD PROCEDURE PROCHW_2
BEGIN
     DECLARE EMP_ROW ANCHOR ROW EMP;
     DECLARE ARR_RESULT FN71981.HW_2.NEWTYPE;
     DECLARE SQLCODE INT;
  	   DECLARE RESULT VARCHAR(50);
     
     OPEN CUR1;
     FETCH CUR1 INTO EMP_ROW;
     
     WHILE SQLCODE = 0 DO
     SET ARR_RESULT[EMP_ROW.FIRSTNME] = EMP_ROW.JOB;
     FETCH CUR1 INTO EMP_ROW;
     END WHILE;
     
     SET RESULT = ARRAY_FIRST(ARR_RESULT);
     
     WHILE RESULT IS NOT NULL DO
        INSERT INTO RESULT_TABLE1(MSG) VALUES ('EMP FIRST NAME: ' || RESULT || '     JOB: ' || ARR_RESULT[RESULT]);

        SET RESULT = ARRAY_NEXT(ARR_RESULT, RESULT);
     END WHILE;

END@

--5
CALL FN71981.HW_2.PROCHW_2@


CREATE TABLE RESULT_TABLE1(
  MSG VARCHAR(50) NOT NULL
  )@
  
    SELECT * FROM FN71981.RESULT_TABLE1@

 