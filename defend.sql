SET SCHEMA FN71981@

SELECT * FROM FLIGHTS@
SELECT * FROM AIRLINES@
SELECT * FROM DESTINATIONS@

--FUNCTIONS
CREATE FUNCTION DESTINATION_NAMES(v_country varchar(50))
RETURNS  TABLE (
   CITY VARCHAR(50)
    )
RETURN
    SELECT CITY
        FROM DESTINATIONS
        WHERE COUNTRY = v_country@
        
	
	SELECT *
	FROM TABLE (FN71981.DESTINATION_NAMES('BULGARIA'))@

SELECT *
FROM TABLE (FN71981.DESTINATION_NAMES('ENGLAND'))@



CREATE FUNCTION FLIGHT_INFO(V_FLIGHT_CODE VARCHAR(50))
RETURNS TABLE(
    DEPARTURE VARCHAR(50),
    DURATION INTEGER,
    ARRIVAL VARCHAR(50)
    )
RETURN
    SELECT AIRPORTNAMEDEPT, DURATION, AIRPORTNAMEARRIVAL
        FROM FLIGHTS
        WHERE CODE = V_FLIGHT_CODE@
        
SELECT *
    FROM TABLE (FN71981.FLIGHT_INFO('FB973'))@
    
SELECT *
    FROM TABLE (FN71981.FLIGHT_INFO('FR6410'))@
 
 
 ---TRIGGER 
 
    CREATE TRIGGER CHECK_FLIGHT_DATE
    BEFORE INSERT ON FN71981.FLIGHTS
       REFERENCING NEW AS N
       FOR EACH ROW
    WHEN (DATE(N.ARRIVALDATE) < DATE(N.DEPTDATE))
    SET N.ARRIVALDATE = '2022-01-25'@
    
INSERT INTO FLIGHTS(CODE, DURATION, DEPTTIME, DEPTDATE, ARRIVALTIME, ARRIVALDATE, DEPTERMINAL, ARRIVALTERMINAL, AIRLINESNAME, AIRPORTNAMEDEPT, AIRPORTNAMEARRIVAL)
VALUES ('FB798', 840, '20:00','2022-01-24','10:00','2022-01-23', 1, 2,'RYANAIR', 'HEATHROW-AIRPORT', 'HAWAI-AIRPORT')@
    
  ---- VIEWS
  
  CREATE VIEW INFO(DESTINATION,FROM,FLIGHTDATE)
AS
    SELECT D.CITY, F.AIRPORTNAMEDEPT, F.DEPTDATE
FROM DESTINATIONS D, FLIGHTS F
WHERE F.AIRPORTNAMEARRIVAL = D.AIRPORTNAME@


SELECT * FROM INFO@

CREATE VIEW FLIGHTS_WITH_WIZZ_AIR(CODE, FROM, TO, AIRLINES)
AS
  SELECT F.CODE, F.AIRPORTNAMEDEPT, D.CITY, F.AIRLINESNAME 
  FROM FLIGHTS F, DESTINATIONS D
  WHERE F.AIRPORTNAMEARRIVAL = D.AIRPORTNAME
  AND F.AIRLINESNAME = 'WIZZ-AIR'@

SELECT  * FROM FLIGHTS_WITH_WIZZ_AIR@
  
   ----- PROCEDURES
 
   
   CREATE OR REPLACE PROCEDURE MOST_COMMON_AIRLINE(OUT v_airlines_name VARCHAR(50))
BEGIN
       DECLARE more_than_one_row CONDITION FOR SQLSTATE '21000';
       DECLARE CONTINUE HANDLER FOR more_than_one_row
       INSERT INTO WARNING_MSG(MSG) VALUES ('More than one row exist');
       CALL DBMS_OUTPUT.PUT_LINE('More than one row exist');

    SELECT  AIRLINESNAME INTO v_airlines_name
    FROM    FLIGHTS
    GROUP BY AIRLINESNAME
    ORDER BY COUNT(*) DESC
    FETCH FIRST 1 ROW ONLY;
END@

   ---------------
   
    CREATE PROCEDURE FLIGHT_INFORMATION(in v_airportname varchar(50))
RESULT SETS 1
    LANGUAGE SQL
    BEGIN
        DECLARE C1 CURSOR WITH RETURN FOR
            SELECT AIRPORTNAMEDEPT, DURATION, AIRPORTNAMEARRIVAL
                FROM FLIGHTS
                    WHERE AIRPORTNAMEDEPT = v_airportname;
        OPEN C1;
    END@
   
   CALL FN71981.FLIGHT_INFORMATION('VARNA-AIRPORT')@
   CALL FN71981.FLIGHT_INFORMATION('HEATHROW-AIRPORT')@
   
--------------------------
   
   CREATE OR REPLACE PROCEDURE HOW_MANY_AIRPORTS_HAVE_COUNTRIES(IN v_country_name VARCHAR(50), OUT v_cnt_airports INT)
BEGIN
     DECLARE cnt INT DEFAULT 0;
     DECLARE table_row ANCHOR ROW FN71981.DESTINATIONS;
     DECLARE end_table INT DEFAULT 0;

     DECLARE not_found CONDITION FOR SQLSTATE '02000';

      DECLARE C1 CURSOR FOR
      SELECT * FROM DESTINATIONS
      WHERE COUNTRY = v_country_name;

     DECLARE CONTINUE HANDLER FOR not_found
     SET end_table = 1;

    OPEN C1;
    FETCH C1 INTO table_row;

    WHILE end_table = 0 DO
    SET cnt = cnt + 1;
    FETCH C1 INTO table_row;
    END WHILE;

    SET v_cnt_airports = cnt;
END@


   